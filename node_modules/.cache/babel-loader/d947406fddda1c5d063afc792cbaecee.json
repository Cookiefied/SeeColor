{"ast":null,"code":"import _toConsumableArray from\"C:/SeeColor/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import\"./Project.css\";import React,{useState}from\"react\";//import MagicDropZone from \"react-magic-dropzone\"\n//import { useNavigate } from \"react-router-dom\";\n//import Cookies from \"universal-cookie\";\nimport image from\"../../images/maintenance.png\";//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \n//  Convert each pixel value ( number ) to hexadecimal ( string ) with base 16\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var rgbToHex=function rgbToHex(pixel){var componentToHex=function componentToHex(c){var hex=c.toString(16);return hex.length==1?\"0\"+hex:hex;};return(\"#\"+componentToHex(pixel.r)+componentToHex(pixel.g)+componentToHex(pixel.b)).toUpperCase();};//from https://dev.to/alvaromontoro/building-your-own-color-contrast-checker-4j7o\n//return luminance of an rgb value\nfunction luminance(r,g,b){var a=[r,g,b].map(function(v){v/=255;return v<=0.03928?v/12.92:Math.pow((v+0.055)/1.055,2.4);});return a[0]*0.2126+a[1]*0.7152+a[2]*0.0722;}//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \n//build an array of rgb objects, and return iy\nvar buildRgb=function buildRgb(imageData){var rgbValues=[];// note that we are loopin every 4!\n// for every Red, Green, Blue and Alpha\nfor(var i=0;i<imageData.length;i+=4){var rgb={r:imageData[i],g:imageData[i+1],b:imageData[i+2]};rgbValues.push(rgb);}return rgbValues;};//from https://dev.to/alvaromontoro/building-your-own-color-contrast-checker-4j7o\n// returns what color channel has the biggest difference\nvar findBiggestColorRange=function findBiggestColorRange(rgbValues){/**\r\n   * Min is initialized to the maximum value posible\r\n   * from there we procced to find the minimum value for that color channel\r\n   *\r\n   * Max is initialized to the minimum value posible\r\n   * from there we procced to fin the maximum value for that color channel\r\n   */var rMin=Number.MAX_VALUE;var gMin=Number.MAX_VALUE;var bMin=Number.MAX_VALUE;var rMax=Number.MIN_VALUE;var gMax=Number.MIN_VALUE;var bMax=Number.MIN_VALUE;rgbValues.forEach(function(pixel){rMin=Math.min(rMin,pixel.r);gMin=Math.min(gMin,pixel.g);bMin=Math.min(bMin,pixel.b);rMax=Math.max(rMax,pixel.r);gMax=Math.max(gMax,pixel.g);bMax=Math.max(bMax,pixel.b);});var rRange=rMax-rMin;var gRange=gMax-gMin;var bRange=bMax-bMin;// determine which color has the biggest difference\nvar biggestRange=Math.max(rRange,gRange,bRange);if(biggestRange===rRange){return\"r\";}else if(biggestRange===gRange){return\"g\";}else{return\"b\";}};//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \n//quantize with median cut\nvar quantization=function quantization(rgbValues,depth){var MAX_DEPTH=4;// Base case\nif(depth===MAX_DEPTH||rgbValues.length===0){var color=rgbValues.reduce(function(prev,curr){prev.r+=curr.r;prev.g+=curr.g;prev.b+=curr.b;return prev;},{r:0,g:0,b:0});color.r=Math.round(color.r/rgbValues.length);color.g=Math.round(color.g/rgbValues.length);color.b=Math.round(color.b/rgbValues.length);return[color];}/**\r\n   *  Recursively do the following:\r\n   *  1. Find the pixel channel (red,green or blue) with biggest difference/range\r\n   *  2. Order by this channel\r\n   *  3. Divide in half the rgb colors list\r\n   *  4. Repeat process again, until desired depth or base case\r\n   */var componentToSortBy=findBiggestColorRange(rgbValues);rgbValues.sort(function(p1,p2){return p1[componentToSortBy]-p2[componentToSortBy];});var mid=rgbValues.length/2;return[].concat(_toConsumableArray(quantization(rgbValues.slice(0,mid),depth+1)),_toConsumableArray(quantization(rgbValues.slice(mid+1),depth+1)));};//test contrast of image\nvar contrastTest=function contrastTest(rgbTestValues){//stores rgb pairs and their contrast\nvar ratios=[];var skip=false;//get the luminance of every value pair\nfor(var i=0;i<rgbTestValues.length;i++){var lumOne=luminance(rgbTestValues[i].r,rgbTestValues[i].g,rgbTestValues[i].b);for(var j=i+1;j<rgbTestValues.length;j++){//if values are the same, skip this iteration of loop\nif(rgbTestValues[i].r==rgbTestValues[j].r&&rgbTestValues[i].g==rgbTestValues[j].g&&rgbTestValues[i].b==rgbTestValues[j].b){continue;}//check if pair has all ready been added\nfor(var k=0;k<ratios.length;k++){if(ratios[k].colour1.r==rgbTestValues[i].r&&ratios[k].colour1.g==rgbTestValues[i].g&&ratios[k].colour1.b==rgbTestValues[i].b&&ratios[k].colour2.r==rgbTestValues[j].r&&ratios[k].colour2.g==rgbTestValues[j].g&&ratios[k].colour2.b==rgbTestValues[j].b||ratios[k].colour1.r==rgbTestValues[j].r&&ratios[k].colour1.g==rgbTestValues[j].g&&ratios[k].colour1.b==rgbTestValues[j].b&&ratios[k].colour2.r==rgbTestValues[i].r&&ratios[k].colour2.g==rgbTestValues[i].g&&ratios[k].colour2.b==rgbTestValues[i].b){skip=true;}}//if it has been, skip adding again\n//if not, add it\nif(!skip){var lumTwo=luminance(rgbTestValues[j].r,rgbTestValues[j].g,rgbTestValues[j].b);//use luminance to calculate contrast\nvar ratio=lumOne>lumTwo?(lumTwo+0.05)/(lumOne+0.05):(lumOne+0.05)/(lumTwo+0.05);//add pair\nvar ratioAndColours={colour1:rgbTestValues[i],colour2:rgbTestValues[j],contrastRatio:ratio};ratios.push(ratioAndColours);}//set skip back\nskip=false;}}//display all value pairs and their contrast\nprintContrasts(ratios);};var printContrasts=function printContrasts(ratios){var resultsContainer=document.getElementById(\"results\");resultsContainer.innerHTML=\"\";for(var i=0;i<ratios.length;i+=1){var contrastElement=document.createElement(\"div\");var colour1Element=document.createElement(\"div\");var colour2Element=document.createElement(\"div\");contrastElement.appendChild(document.createTextNode(ratios[i].contrastRatio.toFixed(5)));var hex1=rgbToHex(ratios[i].colour1);var hex2=rgbToHex(ratios[i].colour2);colour1Element.style.backgroundColor=hex1;colour2Element.style.backgroundColor=hex2;colour1Element.appendChild(document.createTextNode(hex1));colour2Element.appendChild(document.createTextNode(hex2));resultsContainer.appendChild(contrastElement);resultsContainer.appendChild(colour1Element);resultsContainer.appendChild(colour2Element);}};var Project=function Project(){React.useEffect(function(){var c=document.getElementById(\"myCanvas\");var ctx=c.getContext(\"2d\");},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Colour Contrast Tester\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"imgfile\"}),/*#__PURE__*/_jsx(\"canvas\",{id:\"myCanvas\",width:\"200\",height:\"100\",style:{border:\"1px solid #d3d3d3\"},children:\"Your browser does not support the HTML canvas tag.\"}),/*#__PURE__*/_jsx(\"div\",{id:\"results\"})]});};export default Project;// <img src={image} alt=\"down for temporary maintenance\"/>\n/* <div className=\"GuestUIContainer\">\r\n        <div className=\"PosterDragAndDrop\">\r\n          <h2 className=\"SectionHeading\">Upload a Poster</h2>\r\n          <MagicDropZone\r\n            className=\"DragAndDropArea\"\r\n            accept=\".jpg, .png, .jpeg\"\r\n            onDrop={fileDrop}\r\n          >\r\n            {filePreview === null ? (\r\n              \"Drop your poster here\"\r\n            ) : (\r\n              <img className=\"PosterImg\" src={filePreview} alt=\"User Upload\" />\r\n            )}\r\n          </MagicDropZone>\r\n        </div>\r\n        <div className=\"PosterRatingContainer\">\r\n          <h2 className=\"SectionHeading\">Accessibility Score</h2>\r\n          <div style={{ width: \"95%\" }}>\r\n            <BarGraph chartData={BarGraphData.build} />\r\n            <p className=\"TimeToCalculate\">\r\n              {calculating\r\n                ? `Calculating score...`\r\n                : `Calculated in ${totalCalculationTime} seconds`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer autoClose={1000} limit={3} />*/","map":{"version":3,"names":["React","useState","image","rgbToHex","pixel","componentToHex","c","hex","toString","length","r","g","b","toUpperCase","luminance","a","map","v","Math","pow","buildRgb","imageData","rgbValues","i","rgb","push","findBiggestColorRange","rMin","Number","MAX_VALUE","gMin","bMin","rMax","MIN_VALUE","gMax","bMax","forEach","min","max","rRange","gRange","bRange","biggestRange","quantization","depth","MAX_DEPTH","color","reduce","prev","curr","round","componentToSortBy","sort","p1","p2","mid","slice","contrastTest","rgbTestValues","ratios","skip","lumOne","j","k","colour1","colour2","lumTwo","ratio","ratioAndColours","contrastRatio","printContrasts","resultsContainer","document","getElementById","innerHTML","contrastElement","createElement","colour1Element","colour2Element","appendChild","createTextNode","toFixed","hex1","hex2","style","backgroundColor","Project","useEffect","ctx","getContext","border"],"sources":["C:/SeeColor/src/components/pages/Project.js"],"sourcesContent":["import \"./Project.css\"\r\nimport React, { useState } from \"react\";\r\n//import MagicDropZone from \"react-magic-dropzone\"\r\n//import { useNavigate } from \"react-router-dom\";\r\n//import Cookies from \"universal-cookie\";\r\nimport image from \"../../images/maintenance.png\"\r\n\r\n//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \r\n//  Convert each pixel value ( number ) to hexadecimal ( string ) with base 16\r\nconst rgbToHex = (pixel) => {\r\n  const componentToHex = (c) => {\r\n    const hex = c.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  return (\"#\" + componentToHex(pixel.r) + componentToHex(pixel.g) + componentToHex(pixel.b)).toUpperCase();\r\n};\r\n\r\n\r\n//from https://dev.to/alvaromontoro/building-your-own-color-contrast-checker-4j7o\r\n//return luminance of an rgb value\r\nfunction luminance(r, g, b) {\r\n  var a = [r, g, b].map(function (v) {\r\n      v /= 255;\r\n      return v <= 0.03928\r\n          ? v / 12.92\r\n          : Math.pow( (v + 0.055) / 1.055, 2.4 );\r\n  });\r\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\r\n}\r\n\r\n//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \r\n//build an array of rgb objects, and return iy\r\nconst buildRgb = (imageData) => {\r\n  const rgbValues = [];\r\n  // note that we are loopin every 4!\r\n  // for every Red, Green, Blue and Alpha\r\n  for (let i = 0; i < imageData.length; i += 4) {\r\n    const rgb = {r: imageData[i], g: imageData[i + 1], b: imageData[i + 2],};\r\n\r\n    rgbValues.push(rgb);\r\n  }\r\n\r\n  return rgbValues;\r\n};\r\n\r\n//from https://dev.to/alvaromontoro/building-your-own-color-contrast-checker-4j7o\r\n// returns what color channel has the biggest difference\r\nconst findBiggestColorRange = (rgbValues) => {\r\n  /**\r\n   * Min is initialized to the maximum value posible\r\n   * from there we procced to find the minimum value for that color channel\r\n   *\r\n   * Max is initialized to the minimum value posible\r\n   * from there we procced to fin the maximum value for that color channel\r\n   */\r\n  let rMin = Number.MAX_VALUE;\r\n  let gMin = Number.MAX_VALUE;\r\n  let bMin = Number.MAX_VALUE;\r\n\r\n  let rMax = Number.MIN_VALUE;\r\n  let gMax = Number.MIN_VALUE;\r\n  let bMax = Number.MIN_VALUE;\r\n\r\n  rgbValues.forEach((pixel) => {\r\n    rMin = Math.min(rMin, pixel.r);\r\n    gMin = Math.min(gMin, pixel.g);\r\n    bMin = Math.min(bMin, pixel.b);\r\n\r\n    rMax = Math.max(rMax, pixel.r);\r\n    gMax = Math.max(gMax, pixel.g);\r\n    bMax = Math.max(bMax, pixel.b);\r\n  });\r\n\r\n  const rRange = rMax - rMin;\r\n  const gRange = gMax - gMin;\r\n  const bRange = bMax - bMin;\r\n\r\n  // determine which color has the biggest difference\r\n  const biggestRange = Math.max(rRange, gRange, bRange);\r\n  if (biggestRange === rRange) {\r\n    return \"r\";\r\n  } else if (biggestRange === gRange) {\r\n    return \"g\";\r\n  } else {\r\n    return \"b\";\r\n  }\r\n};\r\n\r\n//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \r\n//quantize with median cut\r\nconst quantization = (rgbValues, depth) => {\r\n  const MAX_DEPTH = 4;\r\n\r\n  // Base case\r\n  if (depth === MAX_DEPTH || rgbValues.length === 0) {\r\n    const color = rgbValues.reduce(\r\n      (prev, curr) => {\r\n        prev.r += curr.r;\r\n        prev.g += curr.g;\r\n        prev.b += curr.b;\r\n\r\n        return prev;\r\n      },\r\n      {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0,\r\n      }\r\n    );\r\n\r\n    color.r = Math.round(color.r / rgbValues.length);\r\n    color.g = Math.round(color.g / rgbValues.length);\r\n    color.b = Math.round(color.b / rgbValues.length);\r\n\r\n    return [color];\r\n  }\r\n\r\n  /**\r\n   *  Recursively do the following:\r\n   *  1. Find the pixel channel (red,green or blue) with biggest difference/range\r\n   *  2. Order by this channel\r\n   *  3. Divide in half the rgb colors list\r\n   *  4. Repeat process again, until desired depth or base case\r\n   */\r\n  const componentToSortBy = findBiggestColorRange(rgbValues);\r\n  rgbValues.sort((p1, p2) => {\r\n    return p1[componentToSortBy] - p2[componentToSortBy];\r\n  });\r\n\r\n  const mid = rgbValues.length / 2;\r\n  return [\r\n    ...quantization(rgbValues.slice(0, mid), depth + 1),\r\n    ...quantization(rgbValues.slice(mid + 1), depth + 1),\r\n  ];\r\n};\r\n\r\n//test contrast of image\r\nconst contrastTest = (rgbTestValues) =>{\r\n  //stores rgb pairs and their contrast\r\n  const ratios = [];\r\n  let skip = false;\r\n  \r\n  //get the luminance of every value pair\r\n  for (let i = 0; i < rgbTestValues.length; i++){\r\n    const lumOne = luminance(rgbTestValues[i].r,rgbTestValues[i].g, rgbTestValues[i].b);\r\n\r\n    for(let j = i + 1; j < rgbTestValues.length; j++){\r\n      //if values are the same, skip this iteration of loop\r\n      if (rgbTestValues[i].r == rgbTestValues[j].r && rgbTestValues[i].g == rgbTestValues[j].g && rgbTestValues[i].b == rgbTestValues[j].b){\r\n        continue;\r\n      }\r\n\r\n      //check if pair has all ready been added\r\n      for (let k = 0; k < ratios.length; k++){\r\n        if (ratios[k].colour1.r == rgbTestValues[i].r && ratios[k].colour1.g == rgbTestValues[i].g && ratios[k].colour1.b == rgbTestValues[i].b &&\r\n          ratios[k].colour2.r == rgbTestValues[j].r && ratios[k].colour2.g == rgbTestValues[j].g && ratios[k].colour2.b == rgbTestValues[j].b\r\n          || \r\n          ratios[k].colour1.r == rgbTestValues[j].r && ratios[k].colour1.g == rgbTestValues[j].g && ratios[k].colour1.b == rgbTestValues[j].b &&\r\n          ratios[k].colour2.r == rgbTestValues[i].r && ratios[k].colour2.g == rgbTestValues[i].g && ratios[k].colour2.b == rgbTestValues[i].b) {\r\n            skip = true;\r\n          }\r\n        }\r\n\r\n     //if it has been, skip adding again\r\n     //if not, add it\r\n     if (!skip){\r\n\r\n      const lumTwo = luminance(rgbTestValues[j].r,rgbTestValues[j].g, rgbTestValues[j].b);\r\n\r\n      //use luminance to calculate contrast\r\n    const ratio = lumOne > lumTwo \r\n    ? ((lumTwo  + 0.05) / (lumOne + 0.05))\r\n    : ((lumOne + 0.05) / (lumTwo  + 0.05));\r\n\r\n    //add pair\r\n      const ratioAndColours = {\r\n        colour1: rgbTestValues[i],\r\n        colour2: rgbTestValues[j],\r\n        contrastRatio: ratio,\r\n      };\r\n      \r\n      ratios.push(ratioAndColours);\r\n      }\r\n\r\n      //set skip back\r\n      skip = false;\r\n    }\r\n  }\r\n\r\n  //display all value pairs and their contrast\r\n printContrasts(ratios);\r\n}\r\n\r\nconst printContrasts = (ratios) =>{\r\n  const resultsContainer = document.getElementById(\"results\");\r\n  resultsContainer.innerHTML = \"\";\r\n  for (let i = 0; i < ratios.length; i += 1){\r\n    const contrastElement = document.createElement(\"div\");\r\n    const colour1Element = document.createElement(\"div\");\r\n    const colour2Element = document.createElement(\"div\");\r\n    contrastElement.appendChild(document.createTextNode(ratios[i].contrastRatio.toFixed(5)));\r\n\r\n    const hex1 = rgbToHex(ratios[i].colour1);\r\n    const hex2= rgbToHex(ratios[i].colour2);\r\n    colour1Element.style.backgroundColor = hex1;\r\n    colour2Element.style.backgroundColor = hex2;\r\n    colour1Element.appendChild(document.createTextNode(hex1));\r\n    colour2Element.appendChild(document.createTextNode(hex2));\r\n\r\n    resultsContainer.appendChild(contrastElement);\r\n    resultsContainer.appendChild(colour1Element);\r\n    resultsContainer.appendChild(colour2Element);\r\n  }\r\n}\r\n\r\nconst Project = () => {\r\n  React.useEffect(() => {\r\n    var c = document.getElementById(\"myCanvas\");\r\n    var ctx = c.getContext(\"2d\");\r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Colour Contrast Tester</h1>\r\n      <input type=\"file\" id=\"imgfile\" />\r\n\r\n      <canvas\r\n        id=\"myCanvas\"\r\n        width=\"200\"\r\n        height=\"100\"\r\n        style={{ border: \"1px solid #d3d3d3\" }}\r\n      >\r\n        Your browser does not support the HTML canvas tag.\r\n      </canvas>\r\n      <div id=\"results\"></div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n\r\n\r\n// <img src={image} alt=\"down for temporary maintenance\"/>\r\n\r\n\r\n/* <div className=\"GuestUIContainer\">\r\n        <div className=\"PosterDragAndDrop\">\r\n          <h2 className=\"SectionHeading\">Upload a Poster</h2>\r\n          <MagicDropZone\r\n            className=\"DragAndDropArea\"\r\n            accept=\".jpg, .png, .jpeg\"\r\n            onDrop={fileDrop}\r\n          >\r\n            {filePreview === null ? (\r\n              \"Drop your poster here\"\r\n            ) : (\r\n              <img className=\"PosterImg\" src={filePreview} alt=\"User Upload\" />\r\n            )}\r\n          </MagicDropZone>\r\n        </div>\r\n        <div className=\"PosterRatingContainer\">\r\n          <h2 className=\"SectionHeading\">Accessibility Score</h2>\r\n          <div style={{ width: \"95%\" }}>\r\n            <BarGraph chartData={BarGraphData.build} />\r\n            <p className=\"TimeToCalculate\">\r\n              {calculating\r\n                ? `Calculating score...`\r\n                : `Calculated in ${totalCalculationTime} seconds`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer autoClose={1000} limit={3} />*/\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}