{"ast":null,"code":"var _jsxFileName = \"C:\\\\SeeColor\\\\src\\\\components\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport \"./Home.css\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Logo from \"../../images/seecolor.png\";\nimport Cookies from \"universal-cookie\";\n//import { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n//import Menu from \"@mui/icons-material/Menu\";\n\nimport React from 'react';\nimport '../../App.css';\nimport { Button } from '../Button';\nimport { GetStartedButton } from '../GetStartedButton';\nimport '../MainSection.css';\nimport image from '../../images/layered-waves-main.svg';\nimport { getAuth, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInAnonymously } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Home() {\n  _s();\n  const [homePageMode, setHomePageMode] = useState(\"hero\");\n  const [mobileMenu, setMobileMenu] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    let cookies = new Cookies();\n    if (cookies.get(\"refreshToken\") != null && localStorage.getItem(\"uid\") != null) {\n      navigate(\"/dashboard\");\n    }\n  }, [navigate]);\n\n  /* LOGIN DISABLED\r\n    function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Login Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully login!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n  function handleSignUpSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Registeration Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    createUserWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully Registered!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n    function handleLoginWithGoogleSubmit(event) {\r\n    event.preventDefault();\r\n    const authentication = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(authentication, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", credential.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", result.user.uid);\r\n        toast.success(\"Successfully Signed In with Google!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n        const email = err.customData.email;\r\n        const uid = err.customData.uid;\r\n        const credential = GoogleAuthProvider.credentialFromError(err);\r\n        toast.error(`${err.message}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(errorMessage);\r\n        console.error(errorCode);\r\n        console.error(email);\r\n        console.error(credential.refreshToken);\r\n        console.error(uid);\r\n      });\r\n  }\r\n    function handleGuestModeSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Anonymous sign in request sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInAnonymously(authentication)\r\n      .then(() => {\r\n        toast.success(\"Successfully Signed in Anonymously!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/project`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Anonymously Sign In Failed\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n    function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n    function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n    function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n    function validateEmail() {\r\n    let regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n      if (!email.match(regex)) {\r\n      toast.error(\"invalid email format\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n    function validateConfirmPassword() {\r\n    if (password === \"\") {\r\n      return;\r\n    } else if (password === confirmPassword) {\r\n      toast.info(\"passwords match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n      toast.error(\"passwords do not match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n    function LinkToHero(event) {\r\n    event.preventDefault();\r\n    setMobileMenu(false);\r\n    setHomePageMode(\"hero\");\r\n  }\r\n    function LinkToSignUp(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"register\");\r\n    window.location.href=\"/register\";\r\n  }\r\n    function LinkToLogin(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"login\");\r\n  }\r\n    function mobileMenuHandler(state) {\r\n    if (state) {\r\n      return (\r\n        <div id=\"mobileMenuDiv\">\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                setMobileMenu(!mobileMenu);\r\n                setHomePageMode(\"login\");\r\n              }}\r\n            >\r\n              Login\r\n            </li>\r\n            <li onClick={handleLoginWithGoogleSubmit}>Login with Google</li>\r\n            <li onClick={handleGuestModeSubmit}>Continue as Guest</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  }\r\n    function HomePageModeHandler(state) {\r\n    if (state === \"hero\") {\r\n      return (\r\n        <div>\r\n        </div>\r\n      );\r\n    } else if (state === \"signup\") {\r\n      return (\r\n        <div id=\"RegistrationPageSignInFormDiv\">\r\n          <h2>SIGN UP</h2>\r\n          <form onSubmit={handleSignUpSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              onBlur={validateEmail}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <input\r\n              placeholder=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Sign Up\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Sign Up with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"login\") {\r\n      return (\r\n        <div id=\"LoginPageSignInFormDiv\">\r\n          <h2>LOGIN</h2>\r\n          <form onSubmit={handleLoginSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n              <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button className=\"PopUpAccountMenuDivbtn\" onClick={LinkToSignUp}>\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n            <div className=\"GuestLinkContainer\">\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"mobileMenu\") {\r\n      return <></>;\r\n    }\r\n  }\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"LoginPageDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"wave\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"HOW ACCESSIBLE IS YOUR COLOR?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Let's find out.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-btns\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btns\",\n          buttonStyle: \"btn--primary\",\n          buttonSize: \"btn--large\",\n          children: [\"The Project Guidelines \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"get-started\",\n        children: /*#__PURE__*/_jsxDEV(GetStartedButton, {\n          className: \"btn-center\",\n          buttonStyle: \"btn--outline\",\n          buttonSize: \"btn--large\",\n          \"align-items\": \"center\",\n          \"justify-content\": \"center\",\n          children: [\"Get Started \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 341,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"EpscQBM4LGB8tOy3vivEEu7Frq0=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\n\n/* removed:\r\n\r\n</div>\r\n      {mobileMenuHandler(mobileMenu)}\r\n      {HomePageModeHandler(homePageMode)}\r\n      <ToastContainer autoClose={4000} limit={3} />\r\n    </div>\r\n\r\n    */\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","useNavigate","Logo","Cookies","React","Button","GetStartedButton","image","getAuth","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInAnonymously","Home","homePageMode","setHomePageMode","mobileMenu","setMobileMenu","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","navigate","cookies","get","localStorage","getItem"],"sources":["C:/SeeColor/src/components/pages/Home.js"],"sourcesContent":["import \"./Home.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Logo from \"../../images/seecolor.png\";\r\nimport Cookies from \"universal-cookie\";\r\n//import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//import Menu from \"@mui/icons-material/Menu\";\r\n\r\nimport React from 'react'\r\nimport '../../App.css';\r\nimport { Button } from '../Button';\r\nimport { GetStartedButton } from '../GetStartedButton';\r\nimport '../MainSection.css';\r\nimport image from '../../images/layered-waves-main.svg'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInAnonymously,\r\n} from \"firebase/auth\";\r\n\r\nexport function Home() {\r\n  const [homePageMode, setHomePageMode] = useState(\"hero\");\r\n  const [mobileMenu, setMobileMenu] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let cookies = new Cookies();\r\n    if (\r\n      cookies.get(\"refreshToken\") != null &&\r\n      localStorage.getItem(\"uid\") != null\r\n    ) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  /* LOGIN DISABLED\r\n    function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Login Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully login!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n  function handleSignUpSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Registeration Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    createUserWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully Registered!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleLoginWithGoogleSubmit(event) {\r\n    event.preventDefault();\r\n    const authentication = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(authentication, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", credential.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", result.user.uid);\r\n        toast.success(\"Successfully Signed In with Google!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n        const email = err.customData.email;\r\n        const uid = err.customData.uid;\r\n        const credential = GoogleAuthProvider.credentialFromError(err);\r\n        toast.error(`${err.message}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(errorMessage);\r\n        console.error(errorCode);\r\n        console.error(email);\r\n        console.error(credential.refreshToken);\r\n        console.error(uid);\r\n      });\r\n  }\r\n\r\n  function handleGuestModeSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Anonymous sign in request sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInAnonymously(authentication)\r\n      .then(() => {\r\n        toast.success(\"Successfully Signed in Anonymously!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/project`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Anonymously Sign In Failed\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function validateEmail() {\r\n    let regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    if (!email.match(regex)) {\r\n      toast.error(\"invalid email format\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function validateConfirmPassword() {\r\n    if (password === \"\") {\r\n      return;\r\n    } else if (password === confirmPassword) {\r\n      toast.info(\"passwords match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n      toast.error(\"passwords do not match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function LinkToHero(event) {\r\n    event.preventDefault();\r\n    setMobileMenu(false);\r\n    setHomePageMode(\"hero\");\r\n  }\r\n\r\n  function LinkToSignUp(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"register\");\r\n    window.location.href=\"/register\";\r\n  }\r\n\r\n  function LinkToLogin(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"login\");\r\n  }\r\n\r\n  function mobileMenuHandler(state) {\r\n    if (state) {\r\n      return (\r\n        <div id=\"mobileMenuDiv\">\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                setMobileMenu(!mobileMenu);\r\n                setHomePageMode(\"login\");\r\n              }}\r\n            >\r\n              Login\r\n            </li>\r\n            <li onClick={handleLoginWithGoogleSubmit}>Login with Google</li>\r\n            <li onClick={handleGuestModeSubmit}>Continue as Guest</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n  function HomePageModeHandler(state) {\r\n    if (state === \"hero\") {\r\n      return (\r\n        <div>\r\n        </div>\r\n      );\r\n    } else if (state === \"signup\") {\r\n      return (\r\n        <div id=\"RegistrationPageSignInFormDiv\">\r\n          <h2>SIGN UP</h2>\r\n          <form onSubmit={handleSignUpSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              onBlur={validateEmail}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <input\r\n              placeholder=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Sign Up\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Sign Up with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"login\") {\r\n      return (\r\n        <div id=\"LoginPageSignInFormDiv\">\r\n          <h2>LOGIN</h2>\r\n          <form onSubmit={handleLoginSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button className=\"PopUpAccountMenuDivbtn\" onClick={LinkToSignUp}>\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n            <div className=\"GuestLinkContainer\">\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"mobileMenu\") {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n*/\r\n  return (\r\n    <div id=\"LoginPageDiv\">\r\n        <div className='main-container'>\r\n        <img src={image} alt=\"wave\"/>\r\n        <h1>HOW ACCESSIBLE IS YOUR COLOR?</h1>\r\n        <p>Let's find out.</p>\r\n        \r\n        <div className='main-btns'>\r\n            <Button \r\n                className='btns' \r\n                buttonStyle='btn--primary'\r\n                buttonSize='btn--large'>\r\n                The Project Guidelines <i className='far' />\r\n            </Button>\r\n        </div>\r\n        <div className='get-started'>\r\n            <GetStartedButton\r\n                className='btn-center' \r\n                buttonStyle='btn--outline'\r\n                buttonSize='btn--large'\r\n                align-items='center'\r\n                justify-content='center'>\r\n                Get Started <br></br>\r\n            </GetStartedButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n/* removed:\r\n\r\n</div>\r\n      {mobileMenuHandler(mobileMenu)}\r\n      {HomePageModeHandler(homePageMode)}\r\n      <ToastContainer autoClose={4000} limit={3} />\r\n    </div>\r\n\r\n    */"],"mappings":";;AAAA,OAAO,YAAY;AACnB,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,2BAA2B;AAC5C,OAAOC,OAAO,MAAM,kBAAkB;AACtC;AACA,OAAO,uCAAuC;AAC9C;;AAEA,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe;AACtB,SAASC,MAAM,QAAQ,WAAW;AAClC,SAASC,gBAAgB,QAAQ,qBAAqB;AACtD,OAAO,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,qCAAqC;AAEvD,SACEC,OAAO,EACPC,0BAA0B,EAC1BC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,EAC9BC,iBAAiB,QACZ,eAAe;AAAC;AAEvB,OAAO,SAASC,IAAI,GAAG;EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,eAAe,EAAEC,kBAAkB,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAMyB,QAAQ,GAAGxB,WAAW,EAAE;EAE9BF,SAAS,CAAC,MAAM;IACd,IAAI2B,OAAO,GAAG,IAAIvB,OAAO,EAAE;IAC3B,IACEuB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,IAAI,IAAI,IACnCC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,IAAI,IAAI,EACnC;MACAJ,QAAQ,CAAC,YAAY,CAAC;IACxB;EACF,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEdgBE,oBACE;IAAK,EAAE,EAAC,cAAc;IAAA,uBAClB;MAAK,SAAS,EAAC,gBAAgB;MAAA,wBAC/B;QAAK,GAAG,EAAElB,KAAM;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eAC7B;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsC,eACtC;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eAEtB;QAAK,SAAS,EAAC,WAAW;QAAA,uBACtB,QAAC,MAAM;UACH,SAAS,EAAC,MAAM;UAChB,WAAW,EAAC,cAAc;UAC1B,UAAU,EAAC,YAAY;UAAA,mDACA;YAAG,SAAS,EAAC;UAAK;YAAA;YAAA;YAAA;UAAA,QAAG;QAAA;UAAA;UAAA;UAAA;QAAA;MACvC;QAAA;QAAA;QAAA;MAAA,QACP,eACN;QAAK,SAAS,EAAC,aAAa;QAAA,uBACxB,QAAC,gBAAgB;UACb,SAAS,EAAC,YAAY;UACtB,WAAW,EAAC,cAAc;UAC1B,UAAU,EAAC,YAAY;UACvB,eAAY,QAAQ;UACpB,mBAAgB,QAAQ;UAAA,wCACZ;YAAA;YAAA;YAAA;UAAA,QAAS;QAAA;UAAA;UAAA;UAAA;QAAA;MACN;QAAA;QAAA;QAAA;MAAA,QACjB;IAAA;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAtVeO,IAAI;EAAA,QAMDb,WAAW;AAAA;AAAA,KANda,IAAI;AAwVpB,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA"},"metadata":{},"sourceType":"module"}