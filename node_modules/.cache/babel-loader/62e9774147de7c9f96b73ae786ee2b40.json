{"ast":null,"code":"import _slicedToArray from\"C:/SeeColor/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import\"./Home.css\";import{useEffect,useState}from\"react\";import{useNavigate}from\"react-router-dom\";import Logo from\"../../images/seecolor.png\";import Cookies from\"universal-cookie\";//import { ToastContainer, toast } from \"react-toastify\";\nimport\"react-toastify/dist/ReactToastify.css\";//import Menu from \"@mui/icons-material/Menu\";\nimport React from'react';import'../../App.css';import{Button}from'../Button';import{GetStartedButton}from'../GetStartedButton';import'../MainSection.css';import image from'../../images/layered-waves-main.svg';import{getAuth,signInWithEmailAndPassword,signInWithPopup,GoogleAuthProvider,createUserWithEmailAndPassword,signInAnonymously}from\"firebase/auth\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export function Home(){var _useState=useState(\"hero\"),_useState2=_slicedToArray(_useState,2),homePageMode=_useState2[0],setHomePageMode=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),mobileMenu=_useState4[0],setMobileMenu=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),email=_useState6[0],setEmail=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),password=_useState8[0],setPassword=_useState8[1];var _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),confirmPassword=_useState10[0],setConfirmPassword=_useState10[1];var navigate=useNavigate();useEffect(function(){var cookies=new Cookies();if(cookies.get(\"refreshToken\")!=null&&localStorage.getItem(\"uid\")!=null){navigate(\"/dashboard\");}},[navigate]);/* LOGIN DISABLED\r\n    function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Login Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully login!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n  function handleSignUpSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Registeration Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    createUserWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully Registered!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleLoginWithGoogleSubmit(event) {\r\n    event.preventDefault();\r\n    const authentication = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(authentication, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", credential.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", result.user.uid);\r\n        toast.success(\"Successfully Signed In with Google!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n        const email = err.customData.email;\r\n        const uid = err.customData.uid;\r\n        const credential = GoogleAuthProvider.credentialFromError(err);\r\n        toast.error(`${err.message}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(errorMessage);\r\n        console.error(errorCode);\r\n        console.error(email);\r\n        console.error(credential.refreshToken);\r\n        console.error(uid);\r\n      });\r\n  }\r\n\r\n  function handleGuestModeSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Anonymous sign in request sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInAnonymously(authentication)\r\n      .then(() => {\r\n        toast.success(\"Successfully Signed in Anonymously!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/project`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Anonymously Sign In Failed\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function validateEmail() {\r\n    let regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    if (!email.match(regex)) {\r\n      toast.error(\"invalid email format\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function validateConfirmPassword() {\r\n    if (password === \"\") {\r\n      return;\r\n    } else if (password === confirmPassword) {\r\n      toast.info(\"passwords match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n      toast.error(\"passwords do not match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function LinkToHero(event) {\r\n    event.preventDefault();\r\n    setMobileMenu(false);\r\n    setHomePageMode(\"hero\");\r\n  }\r\n\r\n  function LinkToSignUp(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"register\");\r\n    window.location.href=\"/register\";\r\n  }\r\n\r\n  function LinkToLogin(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"login\");\r\n  }\r\n\r\n  function mobileMenuHandler(state) {\r\n    if (state) {\r\n      return (\r\n        <div id=\"mobileMenuDiv\">\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                setMobileMenu(!mobileMenu);\r\n                setHomePageMode(\"login\");\r\n              }}\r\n            >\r\n              Login\r\n            </li>\r\n            <li onClick={handleLoginWithGoogleSubmit}>Login with Google</li>\r\n            <li onClick={handleGuestModeSubmit}>Continue as Guest</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n  function HomePageModeHandler(state) {\r\n    if (state === \"hero\") {\r\n      return (\r\n        <div>\r\n        </div>\r\n      );\r\n    } else if (state === \"signup\") {\r\n      return (\r\n        <div id=\"RegistrationPageSignInFormDiv\">\r\n          <h2>SIGN UP</h2>\r\n          <form onSubmit={handleSignUpSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              onBlur={validateEmail}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <input\r\n              placeholder=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Sign Up\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Sign Up with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"login\") {\r\n      return (\r\n        <div id=\"LoginPageSignInFormDiv\">\r\n          <h2>LOGIN</h2>\r\n          <form onSubmit={handleLoginSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button className=\"PopUpAccountMenuDivbtn\" onClick={LinkToSignUp}>\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n            <div className=\"GuestLinkContainer\">\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"mobileMenu\") {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n*/return/*#__PURE__*/_jsx(\"div\",{id:\"LoginPageDiv\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"main-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:image,alt:\"wave\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"HOW ACCESSIBLE IS YOUR COLOR?\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Let's find out.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"main-btns\",children:/*#__PURE__*/_jsxs(Button,{className:\"btns\",buttonStyle:\"btn--primary\",buttonSize:\"btn--large\",children:[\"The Project Guidelines \",/*#__PURE__*/_jsx(\"i\",{className:\"far\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"get-started\",children:/*#__PURE__*/_jsxs(GetStartedButton,{className:\"btn-center\",buttonStyle:\"btn--outline\",buttonSize:\"btn--large\",\"align-items\":\"center\",\"justify-content\":\"center\",children:[\"Get Started \",/*#__PURE__*/_jsx(\"br\",{})]})})]})});}export default Home;/* removed:\r\n\r\n</div>\r\n      {mobileMenuHandler(mobileMenu)}\r\n      {HomePageModeHandler(homePageMode)}\r\n      <ToastContainer autoClose={4000} limit={3} />\r\n    </div>\r\n\r\n    */","map":{"version":3,"names":["useEffect","useState","useNavigate","Logo","Cookies","React","Button","GetStartedButton","image","getAuth","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInAnonymously","Home","homePageMode","setHomePageMode","mobileMenu","setMobileMenu","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","navigate","cookies","get","localStorage","getItem"],"sources":["C:/SeeColor/src/components/pages/Home.js"],"sourcesContent":["import \"./Home.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Logo from \"../../images/seecolor.png\";\r\nimport Cookies from \"universal-cookie\";\r\n//import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//import Menu from \"@mui/icons-material/Menu\";\r\n\r\nimport React from 'react'\r\nimport '../../App.css';\r\nimport { Button } from '../Button';\r\nimport { GetStartedButton } from '../GetStartedButton';\r\nimport '../MainSection.css';\r\nimport image from '../../images/layered-waves-main.svg'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInAnonymously,\r\n} from \"firebase/auth\";\r\n\r\nexport function Home() {\r\n  const [homePageMode, setHomePageMode] = useState(\"hero\");\r\n  const [mobileMenu, setMobileMenu] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let cookies = new Cookies();\r\n    if (\r\n      cookies.get(\"refreshToken\") != null &&\r\n      localStorage.getItem(\"uid\") != null\r\n    ) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  /* LOGIN DISABLED\r\n    function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Login Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully login!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n  function handleSignUpSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Registeration Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    createUserWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully Registered!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleLoginWithGoogleSubmit(event) {\r\n    event.preventDefault();\r\n    const authentication = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(authentication, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", credential.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", result.user.uid);\r\n        toast.success(\"Successfully Signed In with Google!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n        const email = err.customData.email;\r\n        const uid = err.customData.uid;\r\n        const credential = GoogleAuthProvider.credentialFromError(err);\r\n        toast.error(`${err.message}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(errorMessage);\r\n        console.error(errorCode);\r\n        console.error(email);\r\n        console.error(credential.refreshToken);\r\n        console.error(uid);\r\n      });\r\n  }\r\n\r\n  function handleGuestModeSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Anonymous sign in request sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInAnonymously(authentication)\r\n      .then(() => {\r\n        toast.success(\"Successfully Signed in Anonymously!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/project`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Anonymously Sign In Failed\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function validateEmail() {\r\n    let regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    if (!email.match(regex)) {\r\n      toast.error(\"invalid email format\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function validateConfirmPassword() {\r\n    if (password === \"\") {\r\n      return;\r\n    } else if (password === confirmPassword) {\r\n      toast.info(\"passwords match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n      toast.error(\"passwords do not match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function LinkToHero(event) {\r\n    event.preventDefault();\r\n    setMobileMenu(false);\r\n    setHomePageMode(\"hero\");\r\n  }\r\n\r\n  function LinkToSignUp(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"register\");\r\n    window.location.href=\"/register\";\r\n  }\r\n\r\n  function LinkToLogin(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"login\");\r\n  }\r\n\r\n  function mobileMenuHandler(state) {\r\n    if (state) {\r\n      return (\r\n        <div id=\"mobileMenuDiv\">\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                setMobileMenu(!mobileMenu);\r\n                setHomePageMode(\"login\");\r\n              }}\r\n            >\r\n              Login\r\n            </li>\r\n            <li onClick={handleLoginWithGoogleSubmit}>Login with Google</li>\r\n            <li onClick={handleGuestModeSubmit}>Continue as Guest</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n  function HomePageModeHandler(state) {\r\n    if (state === \"hero\") {\r\n      return (\r\n        <div>\r\n        </div>\r\n      );\r\n    } else if (state === \"signup\") {\r\n      return (\r\n        <div id=\"RegistrationPageSignInFormDiv\">\r\n          <h2>SIGN UP</h2>\r\n          <form onSubmit={handleSignUpSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              onBlur={validateEmail}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <input\r\n              placeholder=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Sign Up\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Sign Up with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"login\") {\r\n      return (\r\n        <div id=\"LoginPageSignInFormDiv\">\r\n          <h2>LOGIN</h2>\r\n          <form onSubmit={handleLoginSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button className=\"PopUpAccountMenuDivbtn\" onClick={LinkToSignUp}>\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n            <div className=\"GuestLinkContainer\">\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"mobileMenu\") {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n*/\r\n  return (\r\n    <div id=\"LoginPageDiv\">\r\n        <div className='main-container'>\r\n        <img src={image} alt=\"wave\"/>\r\n        <h1>HOW ACCESSIBLE IS YOUR COLOR?</h1>\r\n        <p>Let's find out.</p>\r\n        \r\n        <div className='main-btns'>\r\n            <Button \r\n                className='btns' \r\n                buttonStyle='btn--primary'\r\n                buttonSize='btn--large'>\r\n                The Project Guidelines <i className='far' />\r\n            </Button>\r\n        </div>\r\n        <div className='get-started'>\r\n            <GetStartedButton\r\n                className='btn-center' \r\n                buttonStyle='btn--outline'\r\n                buttonSize='btn--large'\r\n                align-items='center'\r\n                justify-content='center'>\r\n                Get Started <br></br>\r\n            </GetStartedButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n/* removed:\r\n\r\n</div>\r\n      {mobileMenuHandler(mobileMenu)}\r\n      {HomePageModeHandler(homePageMode)}\r\n      <ToastContainer autoClose={4000} limit={3} />\r\n    </div>\r\n\r\n    */"],"mappings":"iGAAA,MAAO,YAAY,CACnB,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAOC,KAAI,KAAM,2BAA2B,CAC5C,MAAOC,QAAO,KAAM,kBAAkB,CACtC;AACA,MAAO,uCAAuC,CAC9C;AAEA,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAO,eAAe,CACtB,OAASC,MAAM,KAAQ,WAAW,CAClC,OAASC,gBAAgB,KAAQ,qBAAqB,CACtD,MAAO,oBAAoB,CAC3B,MAAOC,MAAK,KAAM,qCAAqC,CAEvD,OACEC,OAAO,CACPC,0BAA0B,CAC1BC,eAAe,CACfC,kBAAkB,CAClBC,8BAA8B,CAC9BC,iBAAiB,KACZ,eAAe,CAAC,wFAEvB,MAAO,SAASC,KAAI,EAAG,CACrB,cAAwCd,QAAQ,CAAC,MAAM,CAAC,wCAAjDe,YAAY,eAAEC,eAAe,eACpC,eAAoChB,QAAQ,CAAC,KAAK,CAAC,yCAA5CiB,UAAU,eAAEC,aAAa,eAChC,eAA0BlB,QAAQ,CAAC,EAAE,CAAC,yCAA/BmB,KAAK,eAAEC,QAAQ,eACtB,eAAgCpB,QAAQ,CAAC,EAAE,CAAC,yCAArCqB,QAAQ,eAAEC,WAAW,eAC5B,eAA8CtB,QAAQ,CAAC,EAAE,CAAC,0CAAnDuB,eAAe,gBAAEC,kBAAkB,gBAC1C,GAAMC,SAAQ,CAAGxB,WAAW,EAAE,CAE9BF,SAAS,CAAC,UAAM,CACd,GAAI2B,QAAO,CAAG,GAAIvB,QAAO,EAAE,CAC3B,GACEuB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,EAAI,IAAI,EACnCC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,EAAI,IAAI,CACnC,CACAJ,QAAQ,CAAC,YAAY,CAAC,CACxB,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEdmBACE,YAAK,EAAE,CAAC,cAAc,uBAClB,aAAK,SAAS,CAAC,gBAAgB,wBAC/B,YAAK,GAAG,CAAElB,KAAM,CAAC,GAAG,CAAC,MAAM,EAAE,cAC7B,qDAAsC,cACtC,sCAAsB,cAEtB,YAAK,SAAS,CAAC,WAAW,uBACtB,MAAC,MAAM,EACH,SAAS,CAAC,MAAM,CAChB,WAAW,CAAC,cAAc,CAC1B,UAAU,CAAC,YAAY,kDACA,UAAG,SAAS,CAAC,KAAK,EAAG,GACvC,EACP,cACN,YAAK,SAAS,CAAC,aAAa,uBACxB,MAAC,gBAAgB,EACb,SAAS,CAAC,YAAY,CACtB,WAAW,CAAC,cAAc,CAC1B,UAAU,CAAC,YAAY,CACvB,cAAY,QAAQ,CACpB,kBAAgB,QAAQ,uCACZ,aAAS,GACN,EACjB,GACF,EACF,CAEV,CAEA,cAAeO,KAAI,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}