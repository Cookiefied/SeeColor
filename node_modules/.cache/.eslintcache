[{"C:\\SeeColor\\src\\index.js":"1","C:\\SeeColor\\src\\App.js":"2","C:\\SeeColor\\src\\components\\pages\\ProjectBackground.js":"3","C:\\SeeColor\\src\\components\\pages\\Home.js":"4","C:\\SeeColor\\src\\components\\Navbar.js":"5","C:\\SeeColor\\src\\components\\pages\\Dashboard.js":"6","C:\\SeeColor\\src\\components\\pages\\Research.js":"7","C:\\SeeColor\\src\\components\\pages\\Project.js":"8","C:\\SeeColor\\src\\firebase.js":"9","C:\\SeeColor\\src\\components\\Button.js":"10","C:\\SeeColor\\src\\components\\GetStartedButton.js":"11","C:\\SeeColor\\src\\components\\Background.js":"12"},{"size":244,"mtime":1667434743270,"results":"13","hashOfConfig":"14"},{"size":1319,"mtime":1667434743159,"results":"15","hashOfConfig":"14"},{"size":347,"mtime":1667434743222,"results":"16","hashOfConfig":"14"},{"size":11208,"mtime":1667434743206,"results":"17","hashOfConfig":"14"},{"size":3469,"mtime":1667434743196,"results":"18","hashOfConfig":"14"},{"size":1201,"mtime":1667434743206,"results":"19","hashOfConfig":"14"},{"size":4694,"mtime":1667434743226,"results":"20","hashOfConfig":"14"},{"size":10501,"mtime":1667445618565,"results":"21","hashOfConfig":"14"},{"size":676,"mtime":1667434743226,"results":"22","hashOfConfig":"14"},{"size":762,"mtime":1667434743166,"results":"23","hashOfConfig":"14"},{"size":809,"mtime":1667434743186,"results":"24","hashOfConfig":"14"},{"size":1278,"mtime":1667434743166,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1up9fji",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"C:\\SeeColor\\src\\index.js",[],[],"C:\\SeeColor\\src\\App.js",[],[],"C:\\SeeColor\\src\\components\\pages\\ProjectBackground.js",[],[],"C:\\SeeColor\\src\\components\\pages\\Home.js",["67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83"],[],"import \"./Home.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Logo from \"../../images/seecolor.png\";\r\nimport Cookies from \"universal-cookie\";\r\n//import { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n//import Menu from \"@mui/icons-material/Menu\";\r\n\r\nimport React from 'react'\r\nimport '../../App.css';\r\nimport { Button } from '../Button';\r\nimport { GetStartedButton } from '../GetStartedButton';\r\nimport '../MainSection.css';\r\nimport image from '../../images/layered-waves-main.svg'\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithEmailAndPassword,\r\n  signInWithPopup,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInAnonymously,\r\n} from \"firebase/auth\";\r\n\r\nexport function Home() {\r\n  const [homePageMode, setHomePageMode] = useState(\"hero\");\r\n  const [mobileMenu, setMobileMenu] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    let cookies = new Cookies();\r\n    if (\r\n      cookies.get(\"refreshToken\") != null &&\r\n      localStorage.getItem(\"uid\") != null\r\n    ) {\r\n      navigate(\"/dashboard\");\r\n    }\r\n  }, [navigate]);\r\n\r\n  /* LOGIN DISABLED\r\n    function handleLoginSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Login Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully login!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n  function handleSignUpSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Registeration Request Sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    createUserWithEmailAndPassword(authentication, email, password)\r\n      .then((response) => {\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", response._tokenResponse.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", response.user.uid);\r\n        toast.success(\"Successfully Registered!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(`${err}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleLoginWithGoogleSubmit(event) {\r\n    event.preventDefault();\r\n    const authentication = getAuth();\r\n    const provider = new GoogleAuthProvider();\r\n    signInWithPopup(authentication, provider)\r\n      .then((result) => {\r\n        const credential = GoogleAuthProvider.credentialFromResult(result);\r\n        let cookies = new Cookies();\r\n        cookies.set(\"refreshToken\", credential.refreshToken, {\r\n          sameSite: \"strict\",\r\n          path: \"/\",\r\n          expires: new Date(Date.now() + 12096e5),\r\n        });\r\n        localStorage.setItem(\"uid\", result.user.uid);\r\n        toast.success(\"Successfully Signed In with Google!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/dashboard`);\r\n      })\r\n      .catch((err) => {\r\n        const errorCode = err.code;\r\n        const errorMessage = err.message;\r\n        const email = err.customData.email;\r\n        const uid = err.customData.uid;\r\n        const credential = GoogleAuthProvider.credentialFromError(err);\r\n        toast.error(`${err.message}`, {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(errorMessage);\r\n        console.error(errorCode);\r\n        console.error(email);\r\n        console.error(credential.refreshToken);\r\n        console.error(uid);\r\n      });\r\n  }\r\n\r\n  function handleGuestModeSubmit(event) {\r\n    event.preventDefault();\r\n    toast.info(\"Anonymous sign in request sent\", {\r\n      position: toast.POSITION.BOTTOM_RIGHT,\r\n      autoClose: 4000,\r\n    });\r\n    const authentication = getAuth();\r\n    signInAnonymously(authentication)\r\n      .then(() => {\r\n        toast.success(\"Successfully Signed in Anonymously!\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        navigate(`/project`);\r\n      })\r\n      .catch((err) => {\r\n        toast.error(\"Anonymously Sign In Failed\", {\r\n          position: toast.POSITION.BOTTOM_RIGHT,\r\n          autoClose: 4000,\r\n        });\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  function handleEmailChange(event) {\r\n    setEmail(event.target.value);\r\n  }\r\n\r\n  function handlePasswordChange(event) {\r\n    setPassword(event.target.value);\r\n  }\r\n\r\n  function handleConfirmPasswordChange(event) {\r\n    setConfirmPassword(event.target.value);\r\n  }\r\n\r\n  function validateEmail() {\r\n    let regex = /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n\r\n    if (!email.match(regex)) {\r\n      toast.error(\"invalid email format\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function validateConfirmPassword() {\r\n    if (password === \"\") {\r\n      return;\r\n    } else if (password === confirmPassword) {\r\n      toast.info(\"passwords match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n      toast.error(\"passwords do not match\", {\r\n        position: toast.POSITION.BOTTOM_RIGHT,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  }\r\n\r\n  function LinkToHero(event) {\r\n    event.preventDefault();\r\n    setMobileMenu(false);\r\n    setHomePageMode(\"hero\");\r\n  }\r\n\r\n  function LinkToSignUp(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"register\");\r\n    window.location.href=\"/register\";\r\n  }\r\n\r\n  function LinkToLogin(event) {\r\n    event.preventDefault();\r\n    setHomePageMode(\"login\");\r\n  }\r\n\r\n  function mobileMenuHandler(state) {\r\n    if (state) {\r\n      return (\r\n        <div id=\"mobileMenuDiv\">\r\n          <ul>\r\n            <li\r\n              onClick={() => {\r\n                setMobileMenu(!mobileMenu);\r\n                setHomePageMode(\"login\");\r\n              }}\r\n            >\r\n              Login\r\n            </li>\r\n            <li onClick={handleLoginWithGoogleSubmit}>Login with Google</li>\r\n            <li onClick={handleGuestModeSubmit}>Continue as Guest</li>\r\n          </ul>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n  function HomePageModeHandler(state) {\r\n    if (state === \"hero\") {\r\n      return (\r\n        <div>\r\n        </div>\r\n      );\r\n    } else if (state === \"signup\") {\r\n      return (\r\n        <div id=\"RegistrationPageSignInFormDiv\">\r\n          <h2>SIGN UP</h2>\r\n          <form onSubmit={handleSignUpSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n              onBlur={validateEmail}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <input\r\n              placeholder=\"Confirm Password\"\r\n              type=\"password\"\r\n              value={confirmPassword}\r\n              onChange={handleConfirmPasswordChange}\r\n              onBlur={validateConfirmPassword}\r\n            />\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Sign Up\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Sign Up with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"login\") {\r\n      return (\r\n        <div id=\"LoginPageSignInFormDiv\">\r\n          <h2>LOGIN</h2>\r\n          <form onSubmit={handleLoginSubmit} id=\"SignInForm\">\r\n            <input\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              value={email}\r\n              onChange={handleEmailChange}\r\n            />\r\n            <input\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={handlePasswordChange}\r\n            />\r\n\r\n            <div id=\"LoginBtnsSection\">\r\n              <input\r\n                type=\"submit\"\r\n                value=\"Login\"\r\n                className=\"PopUpAccountMenuDivbtn\"\r\n              />\r\n              <button className=\"PopUpAccountMenuDivbtn\" onClick={LinkToSignUp}>\r\n                Sign Up\r\n              </button>\r\n            </div>\r\n            <div className=\"GuestLinkContainer\">\r\n              <button\r\n                id=\"SignInWithGooglebtn\"\r\n                onClick={handleLoginWithGoogleSubmit}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else if (state === \"mobileMenu\") {\r\n      return <></>;\r\n    }\r\n  }\r\n\r\n*/\r\n  return (\r\n    <div id=\"LoginPageDiv\">\r\n        <div className='main-container'>\r\n        <img src={image} alt=\"wave\"/>\r\n        <h1>HOW ACCESSIBLE IS YOUR COLOR?</h1>\r\n        <p>Let's find out.</p>\r\n        \r\n        <div className='main-btns'>\r\n            <Button \r\n                className='btns' \r\n                buttonStyle='btn--primary'\r\n                buttonSize='btn--large'>\r\n                The Project Guidelines <i className='far' />\r\n            </Button>\r\n        </div>\r\n        <div className='get-started'>\r\n            <GetStartedButton\r\n                className='btn-center' \r\n                buttonStyle='btn--outline'\r\n                buttonSize='btn--large'\r\n                align-items='center'\r\n                justify-content='center'>\r\n                Get Started <br></br>\r\n            </GetStartedButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n/* removed:\r\n\r\n</div>\r\n      {mobileMenuHandler(mobileMenu)}\r\n      {HomePageModeHandler(homePageMode)}\r\n      <ToastContainer autoClose={4000} limit={3} />\r\n    </div>\r\n\r\n    */","C:\\SeeColor\\src\\components\\Navbar.js",["84"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './Navbar.css';\r\n//import { Button } from './Button';\r\n//import Home from './pages/Home.js';\r\n\r\nfunction Navbar() {\r\n  const [click, setClick] = useState(false);\r\n  const [button, setButton] = useState(true);\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n  const showButton = () => {\r\n    if(window.innerWidth <= 960){\r\n        setButton(false);\r\n    } else {\r\n        setButton(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    showButton();\r\n  }, []);\r\n\r\n  window.addEventListener('resize', showButton);\r\n\r\n  return (\r\n    <>\r\n        <nav className='navbar'>\r\n            <div className='navbar-container'>\r\n                <Link to=\"/\" className='navbar-logo' onClick={closeMobileMenu}>\r\n                    SeeColor <i className='fab fa-typeo3'/>\r\n                </Link>\r\n                <div className='menu-icon' onClick={handleClick}>\r\n                    <i className={click ? 'fas fa-times' : 'fas fa-bars'} />\r\n                </div>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/' className='nav-links' onClick={closeMobileMenu}>\r\n                            Home\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/project-background' className='nav-links' onClick={closeMobileMenu}>\r\n                            Background\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/project' className='nav-links' onClick={closeMobileMenu}>\r\n                            Project\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/research-links' className='nav-links' onClick={closeMobileMenu}>\r\n                            Research Links\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                \r\n               {/* {button && <Button buttonStyle='btn--outline'>SIGN UP</Button>} \r\n                    <Link to='/register-or-login' className='Sign-Up' onClick={closeMobileMenu}></Link> */}\r\n            </div>\r\n        </nav>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n\r\n/* LOGIN REMOVED:\r\n\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/project' className='nav-links' onClick={Home.handleGuestModeSubmit}>\r\n                            Continue as Guest\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                <ul className={click ? 'nav-menu active' : 'nav-menu'}>\r\n                    <li className='nav-item'>\r\n                        <Link to='/login' className='nav-links' onClick={closeMobileMenu}>\r\n                            Login\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n                */\r\n","C:\\SeeColor\\src\\components\\pages\\Dashboard.js",["85","86","87","88","89","90","91"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth } from \"../../firebase.js\";\r\nimport \"./Dashboard.css\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport Cookies from \"universal-cookie\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { query, collection, getDocs, where } from \"firebase/firestore\";\r\n\r\nfunction handleLogout() {\r\n  localStorage.clear();\r\n  let cookies = new Cookies();\r\n  cookies.remove(\"refreshToken\");\r\n}\r\n\r\nfunction Dashboard() {\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) return navigate(\"/\");\r\n  }, [user, loading]);\r\n  return (\r\n    <div className=\"dashboard\">\r\n       <div className=\"dashboard__container\">\r\n        Logged in as\r\n         <div>{name}</div>\r\n         <div>{user?.email}</div>\r\n         <Link to=\"/\" onClick={handleLogout}>\r\n            <li className=\"PopUpAccountMenuDivbtn\">Logout</li>\r\n          </Link>\r\n       </div>\r\n     </div>\r\n  );\r\n}\r\nexport default Dashboard;\r\n","C:\\SeeColor\\src\\components\\pages\\Research.js",[],[],"C:\\SeeColor\\src\\components\\pages\\Project.js",["92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113"],[],"import \"./Project.css\"\r\nimport React, { useState } from \"react\";\r\n//import MagicDropZone from \"react-magic-dropzone\"\r\n//import { useNavigate } from \"react-router-dom\";\r\n//import Cookies from \"universal-cookie\";\r\nimport image from \"../../images/maintenance.png\"\r\n\r\n//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \r\n//  Convert each pixel value ( number ) to hexadecimal ( string ) with base 16\r\nconst rgbToHex = (pixel) => {\r\n  const componentToHex = (c) => {\r\n    const hex = c.toString(16);\r\n    return hex.length == 1 ? \"0\" + hex : hex;\r\n  };\r\n\r\n  return (\"#\" + componentToHex(pixel.r) + componentToHex(pixel.g) + componentToHex(pixel.b)).toUpperCase();\r\n};\r\n\r\n\r\n//from https://dev.to/alvaromontoro/building-your-own-color-contrast-checker-4j7o\r\n//return luminance of an rgb value\r\nfunction luminance(r, g, b) {\r\n  var a = [r, g, b].map(function (v) {\r\n      v /= 255;\r\n      return v <= 0.03928\r\n          ? v / 12.92\r\n          : Math.pow( (v + 0.055) / 1.055, 2.4 );\r\n  });\r\n  return a[0] * 0.2126 + a[1] * 0.7152 + a[2] * 0.0722;\r\n}\r\n\r\n//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \r\n//build an array of rgb objects, and return iy\r\nconst buildRgb = (imageData) => {\r\n  const rgbValues = [];\r\n  // note that we are loopin every 4!\r\n  // for every Red, Green, Blue and Alpha\r\n  for (let i = 0; i < imageData.length; i += 4) {\r\n    const rgb = {r: imageData[i], g: imageData[i + 1], b: imageData[i + 2],};\r\n\r\n    rgbValues.push(rgb);\r\n  }\r\n\r\n  return rgbValues;\r\n};\r\n\r\n//from https://dev.to/alvaromontoro/building-your-own-color-contrast-checker-4j7o\r\n// returns what color channel has the biggest difference\r\nconst findBiggestColorRange = (rgbValues) => {\r\n  /**\r\n   * Min is initialized to the maximum value posible\r\n   * from there we procced to find the minimum value for that color channel\r\n   *\r\n   * Max is initialized to the minimum value posible\r\n   * from there we procced to fin the maximum value for that color channel\r\n   */\r\n  let rMin = Number.MAX_VALUE;\r\n  let gMin = Number.MAX_VALUE;\r\n  let bMin = Number.MAX_VALUE;\r\n\r\n  let rMax = Number.MIN_VALUE;\r\n  let gMax = Number.MIN_VALUE;\r\n  let bMax = Number.MIN_VALUE;\r\n\r\n  rgbValues.forEach((pixel) => {\r\n    rMin = Math.min(rMin, pixel.r);\r\n    gMin = Math.min(gMin, pixel.g);\r\n    bMin = Math.min(bMin, pixel.b);\r\n\r\n    rMax = Math.max(rMax, pixel.r);\r\n    gMax = Math.max(gMax, pixel.g);\r\n    bMax = Math.max(bMax, pixel.b);\r\n  });\r\n\r\n  const rRange = rMax - rMin;\r\n  const gRange = gMax - gMin;\r\n  const bRange = bMax - bMin;\r\n\r\n  // determine which color has the biggest difference\r\n  const biggestRange = Math.max(rRange, gRange, bRange);\r\n  if (biggestRange === rRange) {\r\n    return \"r\";\r\n  } else if (biggestRange === gRange) {\r\n    return \"g\";\r\n  } else {\r\n    return \"b\";\r\n  }\r\n};\r\n\r\n//from https://github.com/zygisS22/color-palette-extraction/blob/master/index.js  \r\n//quantize with median cut\r\nconst quantization = (rgbValues, depth) => {\r\n  const MAX_DEPTH = 4;\r\n\r\n  // Base case\r\n  if (depth === MAX_DEPTH || rgbValues.length === 0) {\r\n    const color = rgbValues.reduce(\r\n      (prev, curr) => {\r\n        prev.r += curr.r;\r\n        prev.g += curr.g;\r\n        prev.b += curr.b;\r\n\r\n        return prev;\r\n      },\r\n      {\r\n        r: 0,\r\n        g: 0,\r\n        b: 0,\r\n      }\r\n    );\r\n\r\n    color.r = Math.round(color.r / rgbValues.length);\r\n    color.g = Math.round(color.g / rgbValues.length);\r\n    color.b = Math.round(color.b / rgbValues.length);\r\n\r\n    return [color];\r\n  }\r\n\r\n  /**\r\n   *  Recursively do the following:\r\n   *  1. Find the pixel channel (red,green or blue) with biggest difference/range\r\n   *  2. Order by this channel\r\n   *  3. Divide in half the rgb colors list\r\n   *  4. Repeat process again, until desired depth or base case\r\n   */\r\n  const componentToSortBy = findBiggestColorRange(rgbValues);\r\n  rgbValues.sort((p1, p2) => {\r\n    return p1[componentToSortBy] - p2[componentToSortBy];\r\n  });\r\n\r\n  const mid = rgbValues.length / 2;\r\n  return [\r\n    ...quantization(rgbValues.slice(0, mid), depth + 1),\r\n    ...quantization(rgbValues.slice(mid + 1), depth + 1),\r\n  ];\r\n};\r\n\r\n//test contrast of image\r\nconst contrastTest = (rgbTestValues) =>{\r\n  //stores rgb pairs and their contrast\r\n  const ratios = [];\r\n  let skip = false;\r\n  \r\n  //get the luminance of every value pair\r\n  for (let i = 0; i < rgbTestValues.length; i++){\r\n    const lumOne = luminance(rgbTestValues[i].r,rgbTestValues[i].g, rgbTestValues[i].b);\r\n\r\n    for(let j = i + 1; j < rgbTestValues.length; j++){\r\n      //if values are the same, skip this iteration of loop\r\n      if (rgbTestValues[i].r == rgbTestValues[j].r && rgbTestValues[i].g == rgbTestValues[j].g && rgbTestValues[i].b == rgbTestValues[j].b){\r\n        continue;\r\n      }\r\n\r\n      //check if pair has all ready been added\r\n      for (let k = 0; k < ratios.length; k++){\r\n        if (ratios[k].colour1.r == rgbTestValues[i].r && ratios[k].colour1.g == rgbTestValues[i].g && ratios[k].colour1.b == rgbTestValues[i].b &&\r\n          ratios[k].colour2.r == rgbTestValues[j].r && ratios[k].colour2.g == rgbTestValues[j].g && ratios[k].colour2.b == rgbTestValues[j].b\r\n          || \r\n          ratios[k].colour1.r == rgbTestValues[j].r && ratios[k].colour1.g == rgbTestValues[j].g && ratios[k].colour1.b == rgbTestValues[j].b &&\r\n          ratios[k].colour2.r == rgbTestValues[i].r && ratios[k].colour2.g == rgbTestValues[i].g && ratios[k].colour2.b == rgbTestValues[i].b) {\r\n            skip = true;\r\n          }\r\n        }\r\n\r\n     //if it has been, skip adding again\r\n     //if not, add it\r\n     if (!skip){\r\n\r\n      const lumTwo = luminance(rgbTestValues[j].r,rgbTestValues[j].g, rgbTestValues[j].b);\r\n\r\n      //use luminance to calculate contrast\r\n    const ratio = lumOne > lumTwo \r\n    ? ((lumTwo  + 0.05) / (lumOne + 0.05))\r\n    : ((lumOne + 0.05) / (lumTwo  + 0.05));\r\n\r\n    //add pair\r\n      const ratioAndColours = {\r\n        colour1: rgbTestValues[i],\r\n        colour2: rgbTestValues[j],\r\n        contrastRatio: ratio,\r\n      };\r\n      \r\n      ratios.push(ratioAndColours);\r\n      }\r\n\r\n      //set skip back\r\n      skip = false;\r\n    }\r\n  }\r\n\r\n  //display all value pairs and their contrast\r\n printContrasts(ratios);\r\n}\r\n\r\nconst printContrasts = (ratios) =>{\r\n  const resultsContainer = document.getElementById(\"results\");\r\n  resultsContainer.innerHTML = \"\";\r\n  for (let i = 0; i < ratios.length; i += 1){\r\n    const contrastElement = document.createElement(\"div\");\r\n    const colour1Element = document.createElement(\"div\");\r\n    const colour2Element = document.createElement(\"div\");\r\n    contrastElement.appendChild(document.createTextNode(ratios[i].contrastRatio.toFixed(5)));\r\n\r\n    const hex1 = rgbToHex(ratios[i].colour1);\r\n    const hex2= rgbToHex(ratios[i].colour2);\r\n    colour1Element.style.backgroundColor = hex1;\r\n    colour2Element.style.backgroundColor = hex2;\r\n    colour1Element.appendChild(document.createTextNode(hex1));\r\n    colour2Element.appendChild(document.createTextNode(hex2));\r\n\r\n    resultsContainer.appendChild(contrastElement);\r\n    resultsContainer.appendChild(colour1Element);\r\n    resultsContainer.appendChild(colour2Element);\r\n  }\r\n}\r\n\r\nconst getDataFromImage = () =>{\r\n  const imgFile = document.getElementById(\"imgfile\");\r\n  const image = new Image();\r\n  const file = imgFile.files[0];\r\n  const fileReader = new FileReader();\r\n\r\n  // Whenever file & image is loaded procced to extract the information from the image\r\n  fileReader.onload = () => {\r\n    image.onload = () => {\r\n      // Set the canvas size to be the same as of the uploaded image\r\n      const canvas = document.getElementById(\"canvas\");\r\n      canvas.width = image.width;\r\n      canvas.height = image.height;\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(image, 0, 0);\r\n\r\n      /**\r\n       * getImageData returns an array full of RGBA values\r\n       * each pixel consists of four values: the red value of the colour, the green, the blue and the alpha\r\n       * (transparency). For array value consistency reasons,\r\n       * the alpha is not from 0 to 1 like it is in the RGBA of CSS, but from 0 to 255.\r\n       */\r\n      const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n\r\n      // Convert the image data to RGB values so its much simpler\r\n      const rgbArray = buildRgb(imageData.data);\r\n\r\n      /**\r\n       * Color quantization\r\n       * A process that reduces the number of colors used in an image\r\n       * while trying to visually maintin the original image as much as possible\r\n       */\r\n      const quantColors = quantization(rgbArray, 0);\r\n      contrastTest(quantColors);\r\n    };\r\n    image.src = fileReader.result;\r\n  };\r\n  fileReader.readAsDataURL(file);\r\n}\r\n\r\n\r\n\r\nconst Project = () => {\r\n  /*React.useEffect(() => {\r\n\r\n\r\n    var c = document.getElementById(\"myCanvas\");\r\n    var ctx = c.getContext(\"2d\");\r\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n  }, []);*/\r\n\r\n  return (\r\n    <div>\r\n      <h1>Colour Contrast Tester</h1>\r\n      <form action=\"#\">\r\n      <input type=\"file\" id=\"imgfile\" />\r\n      <input type=\"button\" id=\"btnLoad\" value=\"Load\" onClick={getDataFromImage}/>\r\n      </form>\r\n      <canvas id=\"canvas\">\r\n        Your browser does not support the HTML canvas tag.\r\n      </canvas>\r\n      <div id=\"results\"></div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Project;\r\n\r\n\r\n// <img src={image} alt=\"down for temporary maintenance\"/>\r\n\r\n\r\n/* <div className=\"GuestUIContainer\">\r\n        <div className=\"PosterDragAndDrop\">\r\n          <h2 className=\"SectionHeading\">Upload a Poster</h2>\r\n          <MagicDropZone\r\n            className=\"DragAndDropArea\"\r\n            accept=\".jpg, .png, .jpeg\"\r\n            onDrop={fileDrop}\r\n          >\r\n            {filePreview === null ? (\r\n              \"Drop your poster here\"\r\n            ) : (\r\n              <img className=\"PosterImg\" src={filePreview} alt=\"User Upload\" />\r\n            )}\r\n          </MagicDropZone>\r\n        </div>\r\n        <div className=\"PosterRatingContainer\">\r\n          <h2 className=\"SectionHeading\">Accessibility Score</h2>\r\n          <div style={{ width: \"95%\" }}>\r\n            <BarGraph chartData={BarGraphData.build} />\r\n            <p className=\"TimeToCalculate\">\r\n              {calculating\r\n                ? `Calculating score...`\r\n                : `Calculated in ${totalCalculationTime} seconds`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <ToastContainer autoClose={1000} limit={3} />*/\r\n\r\n","C:\\SeeColor\\src\\firebase.js",[],[],"C:\\SeeColor\\src\\components\\Button.js",[],[],"C:\\SeeColor\\src\\components\\GetStartedButton.js",[],[],"C:\\SeeColor\\src\\components\\Background.js",["114"],[],"import React from 'react'\r\nimport '../App.css';\r\nimport './Background.css';\r\nimport imagebg from '../images/blurry-gradient.svg';\r\n\r\nfunction Background() {\r\n    return (\r\n    <div className='background-container'>\r\n            <img src = { imagebg } />\r\n            <h1>What our project is about:</h1>\r\n            <p>The goal of this project is to provide a solution to an issue with media such as posters, images, and graphics being inaccessible to colour blind people. A team member’s parent and friend are color blind and we were inspired by the demonstrated project on poster accessibility. We decided to improve upon it, providing a quick solution to checking the color blind accessibility to graphics, posters, and other media. </p>\r\n            <p>This is our implementation of a web application where all can upload an image and our application will scan it and report how accessible the image is for different types of color-blindess, based on user testing. Our application will give the image a rating for Monochromacy and the three variations of Dichromacy. It will also explain how to improve the ratings for each, and link to background information on colour blindness. </p>\r\n            \r\n            \r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Background;\r\n",{"ruleId":"115","severity":1,"message":"116","line":4,"column":8,"nodeType":"117","messageId":"118","endLine":4,"endColumn":12},{"ruleId":"115","severity":1,"message":"119","line":18,"column":3,"nodeType":"117","messageId":"118","endLine":18,"endColumn":10},{"ruleId":"115","severity":1,"message":"120","line":19,"column":3,"nodeType":"117","messageId":"118","endLine":19,"endColumn":29},{"ruleId":"115","severity":1,"message":"121","line":20,"column":3,"nodeType":"117","messageId":"118","endLine":20,"endColumn":18},{"ruleId":"115","severity":1,"message":"122","line":21,"column":3,"nodeType":"117","messageId":"118","endLine":21,"endColumn":21},{"ruleId":"115","severity":1,"message":"123","line":22,"column":3,"nodeType":"117","messageId":"118","endLine":22,"endColumn":33},{"ruleId":"115","severity":1,"message":"124","line":23,"column":3,"nodeType":"117","messageId":"118","endLine":23,"endColumn":20},{"ruleId":"115","severity":1,"message":"125","line":27,"column":10,"nodeType":"117","messageId":"118","endLine":27,"endColumn":22},{"ruleId":"115","severity":1,"message":"126","line":27,"column":24,"nodeType":"117","messageId":"118","endLine":27,"endColumn":39},{"ruleId":"115","severity":1,"message":"127","line":28,"column":10,"nodeType":"117","messageId":"118","endLine":28,"endColumn":20},{"ruleId":"115","severity":1,"message":"128","line":28,"column":22,"nodeType":"117","messageId":"118","endLine":28,"endColumn":35},{"ruleId":"115","severity":1,"message":"129","line":29,"column":10,"nodeType":"117","messageId":"118","endLine":29,"endColumn":15},{"ruleId":"115","severity":1,"message":"130","line":29,"column":17,"nodeType":"117","messageId":"118","endLine":29,"endColumn":25},{"ruleId":"115","severity":1,"message":"131","line":30,"column":10,"nodeType":"117","messageId":"118","endLine":30,"endColumn":18},{"ruleId":"115","severity":1,"message":"132","line":30,"column":20,"nodeType":"117","messageId":"118","endLine":30,"endColumn":31},{"ruleId":"115","severity":1,"message":"133","line":31,"column":10,"nodeType":"117","messageId":"118","endLine":31,"endColumn":25},{"ruleId":"115","severity":1,"message":"134","line":31,"column":27,"nodeType":"117","messageId":"118","endLine":31,"endColumn":45},{"ruleId":"115","severity":1,"message":"135","line":9,"column":10,"nodeType":"117","messageId":"118","endLine":9,"endColumn":16},{"ruleId":"115","severity":1,"message":"136","line":10,"column":10,"nodeType":"117","messageId":"118","endLine":10,"endColumn":15},{"ruleId":"115","severity":1,"message":"137","line":10,"column":17,"nodeType":"117","messageId":"118","endLine":10,"endColumn":27},{"ruleId":"115","severity":1,"message":"138","line":10,"column":29,"nodeType":"117","messageId":"118","endLine":10,"endColumn":36},{"ruleId":"115","severity":1,"message":"139","line":10,"column":38,"nodeType":"117","messageId":"118","endLine":10,"endColumn":43},{"ruleId":"115","severity":1,"message":"140","line":19,"column":25,"nodeType":"117","messageId":"118","endLine":19,"endColumn":30},{"ruleId":"115","severity":1,"message":"141","line":20,"column":16,"nodeType":"117","messageId":"118","endLine":20,"endColumn":23},{"ruleId":"142","severity":1,"message":"143","line":25,"column":6,"nodeType":"144","endLine":25,"endColumn":21,"suggestions":"145"},{"ruleId":"115","severity":1,"message":"146","line":2,"column":17,"nodeType":"117","messageId":"118","endLine":2,"endColumn":25},{"ruleId":"115","severity":1,"message":"147","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":13,"column":23,"nodeType":"150","messageId":"151","endLine":13,"endColumn":25},{"ruleId":"148","severity":1,"message":"149","line":150,"column":30,"nodeType":"150","messageId":"151","endLine":150,"endColumn":32},{"ruleId":"148","severity":1,"message":"149","line":150,"column":74,"nodeType":"150","messageId":"151","endLine":150,"endColumn":76},{"ruleId":"148","severity":1,"message":"149","line":150,"column":118,"nodeType":"150","messageId":"151","endLine":150,"endColumn":120},{"ruleId":"148","severity":1,"message":"149","line":156,"column":33,"nodeType":"150","messageId":"151","endLine":156,"endColumn":35},{"ruleId":"148","severity":1,"message":"149","line":156,"column":78,"nodeType":"150","messageId":"151","endLine":156,"endColumn":80},{"ruleId":"148","severity":1,"message":"149","line":156,"column":123,"nodeType":"150","messageId":"151","endLine":156,"endColumn":125},{"ruleId":"148","severity":1,"message":"149","line":157,"column":31,"nodeType":"150","messageId":"151","endLine":157,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":157,"column":76,"nodeType":"150","messageId":"151","endLine":157,"endColumn":78},{"ruleId":"152","severity":1,"message":"153","line":157,"column":98,"nodeType":"154","messageId":"155","endLine":157,"endColumn":100},{"ruleId":"148","severity":1,"message":"149","line":157,"column":121,"nodeType":"150","messageId":"151","endLine":157,"endColumn":123},{"ruleId":"152","severity":1,"message":"153","line":158,"column":11,"nodeType":"154","messageId":"155","endLine":158,"endColumn":13},{"ruleId":"152","severity":1,"message":"156","line":158,"column":11,"nodeType":"154","messageId":"155","endLine":158,"endColumn":13},{"ruleId":"148","severity":1,"message":"149","line":159,"column":31,"nodeType":"150","messageId":"151","endLine":159,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":159,"column":76,"nodeType":"150","messageId":"151","endLine":159,"endColumn":78},{"ruleId":"148","severity":1,"message":"149","line":159,"column":121,"nodeType":"150","messageId":"151","endLine":159,"endColumn":123},{"ruleId":"148","severity":1,"message":"149","line":160,"column":31,"nodeType":"150","messageId":"151","endLine":160,"endColumn":33},{"ruleId":"148","severity":1,"message":"149","line":160,"column":76,"nodeType":"150","messageId":"151","endLine":160,"endColumn":78},{"ruleId":"152","severity":1,"message":"156","line":160,"column":98,"nodeType":"154","messageId":"155","endLine":160,"endColumn":100},{"ruleId":"148","severity":1,"message":"149","line":160,"column":121,"nodeType":"150","messageId":"151","endLine":160,"endColumn":123},{"ruleId":"157","severity":1,"message":"158","line":9,"column":13,"nodeType":"159","endLine":9,"endColumn":38},"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'getAuth' is defined but never used.","'signInWithEmailAndPassword' is defined but never used.","'signInWithPopup' is defined but never used.","'GoogleAuthProvider' is defined but never used.","'createUserWithEmailAndPassword' is defined but never used.","'signInAnonymously' is defined but never used.","'homePageMode' is assigned a value but never used.","'setHomePageMode' is assigned a value but never used.","'mobileMenu' is assigned a value but never used.","'setMobileMenu' is assigned a value but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'confirmPassword' is assigned a value but never used.","'setConfirmPassword' is assigned a value but never used.","'button' is assigned a value but never used.","'query' is defined but never used.","'collection' is defined but never used.","'getDocs' is defined but never used.","'where' is defined but never used.","'error' is assigned a value but never used.","'setName' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'useState' is defined but never used.","'image' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'. Use parentheses to clarify the intended order of operations.","LogicalExpression","unexpectedMixedOperator","Unexpected mix of '||' and '&&'. Use parentheses to clarify the intended order of operations.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"161","fix":"162"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"163","text":"164"},[811,826],"[user, loading, navigate]"]